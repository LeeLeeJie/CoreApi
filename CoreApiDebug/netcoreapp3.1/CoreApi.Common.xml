<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CoreApi.Common</name>
    </assembly>
    <members>
        <member name="P:CoreApi.Common.DTO.LoginInfo.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:CoreApi.Common.DTO.LoginInfo.Pwd">
            <summary>
            密码
            </summary>
        </member>
        <member name="M:CoreApi.Common.Extension.PathExtension.GetExecutingPath">
            <summary>
                获取执行文件路径
            </summary>
            <returns></returns>
        </member>
        <member name="P:CoreApi.Common.ICommonService.IJsonConfigService`1.Current">
            <summary>
            配置文件内容
            </summary>
        </member>
        <member name="P:CoreApi.Common.ICommonService.IJsonConfigService`1.ConfigFileName">
            <summary>
                配置文件名
            </summary>
        </member>
        <member name="M:CoreApi.Common.ICommonService.IJsonConfigService`1.ReadConfig">
            <summary>
                读取配置集
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreApi.Common.ICommonService.IJsonConfigService`1.WriteConfig(`0)">
            <summary>
                写入配置集
            </summary>
            <param name="configData"></param>
            <returns></returns>
        </member>
        <member name="M:CoreApi.Common.ICommonService.IJsonSerializer.ToJson(System.Object)">
            <summary>
                将对象序列化成json字符串
            </summary>
            <param name="instance">用于序列化的对象实例</param>
            <returns>对象序列化后的json字符串</returns>
        </member>
        <member name="M:CoreApi.Common.ICommonService.IJsonSerializer.ToNestedJson(System.Object)">
            <summary>
                将对象序列化成嵌套结构的json字符串
            </summary>
            <param name="instance">用于序列化的对象实例</param>
            <returns>对象序列化后的json字符串</returns>
        </member>
        <member name="M:CoreApi.Common.ICommonService.IJsonSerializer.ToJson(System.Object,System.Boolean)">
            <summary>
                将对象序列化成json字符串
            </summary>
            <param name="instance">用于序列化的对象实例</param>
            <param name="propertycamelCase">属性使用驼峰命名</param>
            <returns>对象序列化后的json字符串</returns>
        </member>
        <member name="M:CoreApi.Common.ICommonService.IJsonSerializer.ToJson(System.Object,System.Type)">
            <summary>
                将对象序列化成json字符串
            </summary>
            <param name="instance">用于序列化的对象实例</param>
            <param name="type">对象形式类型</param>
            <returns>对象序列化后的json字符串</returns>
        </member>
        <member name="M:CoreApi.Common.ICommonService.IJsonSerializer.ToJson(System.Object,System.Type,System.Boolean)">
            <summary>
                将对象序列化成json字符串
            </summary>
            <param name="instance">用于序列化的对象实例</param>
            <param name="type">对象形式类型</param>
            <param name="propertycamelCase">属性使用驼峰命名</param>
            <returns>对象序列化后的json字符串</returns>
        </member>
        <member name="M:CoreApi.Common.ICommonService.IJsonSerializer.FromJson(System.String,System.Type)">
            <summary>
                通过json字符串反序列化出对象
            </summary>
            <param name="json">用于反序列化的json字符串</param>
            <param name="type">对象形式类型</param>
            <returns>json字符串反序列化后的对象</returns>
        </member>
        <member name="M:CoreApi.Common.ICommonService.IJsonSerializer.FromJson``1(System.String)">
            <summary>
                通过json字符串反序列化出对象
            </summary>
            <typeparam name="T">对象形式类型</typeparam>
            <param name="json">用于反序列化的json字符串</param>
            <returns>json字符串反序列化后的对象</returns>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogCritical(System.String,System.Object[])">
            <summary>
                记录致命错误
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogCritical(System.Exception,System.String,System.Object[])">
            <summary>
                记录致命错误
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogDebug(System.Exception,System.String,System.Object[])">
            <summary>
                记录调试信息
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogDebug(System.String,System.Object[])">
            <summary>
                记录调试信息
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogError(System.String,System.Object[])">
            <summary>
                记录错误
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogError(System.Exception,System.Object[])">
            <summary>
                记录错误
            </summary>
            <param name="exception"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogInformation(System.Exception,System.String,System.Object[])">
            <summary>
                记录信息
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogInformation(System.String,System.Object[])">
            <summary>
                记录信息
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogTrace(System.String,System.Boolean,System.Object[])">
            <summary>
                记录跟踪信息
            </summary>
            <param name="message"></param>
            <param name="showMessage"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogTrace(System.Exception,System.String,System.Object[])">
            <summary>
                记录跟踪信息
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogWarning(System.String,System.Object[])">
            <summary>
                记录警告
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogWarning(System.Exception,System.String,System.Object[])">
            <summary>
                记录警告
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogDebug(System.String)">
            <summary>
                记录调试信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CoreApi.Common.ICommonService.ILogService.LogInformation(System.String)">
            <summary>
                记录信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:CoreApi.Common.Implement.JsonConfigServiceBase`1.Current">
            <summary>
            配置文件内容
            </summary>
        </member>
        <member name="P:CoreApi.Common.Implement.JsonConfigServiceBase`1.ConfigFileName">
            <summary>
                配置文件名
            </summary>
        </member>
        <member name="M:CoreApi.Common.Implement.JsonConfigServiceBase`1.ReadConfig">
            <summary>
                读取配置集
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreApi.Common.Implement.JsonConfigServiceBase`1.WriteConfig(`0)">
            <summary>
                写入配置集
            </summary>
            <param name="appCfg"></param>
            <returns></returns>
        </member>
        <member name="P:CoreApi.Common.Implement.JsonConfigServiceBase`1.ServiceDescription">
            <summary>
                服务描述
            </summary>
        </member>
        <member name="M:CoreApi.Common.Implement.JsonConfigServiceBase`1.StartService">
            <summary>
                启动服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreApi.Common.Implement.JsonConfigServiceBase`1.StopService">
            <summary>
                停止服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreApi.Common.Implement.JsonSerializerService.ToJson(System.Object,System.Boolean)">
            <summary>
                将对象序列化成json字符串
            </summary>
            <param name="instance">用于序列化的对象实例</param>
            <param name="propertycamelCase">属性使用驼峰命名</param>
            <returns>对象序列化后的json字符串</returns>
        </member>
        <member name="M:CoreApi.Common.Implement.JsonSerializerService.ToNestedJson(System.Object)">
            <summary>
                将对象序列化成嵌套结构的json字符串
            </summary>
            <param name="instance">用于序列化的对象实例</param>
            <returns>对象序列化后的json字符串</returns>
        </member>
        <member name="M:CoreApi.Common.Implement.JsonSerializerService.ToJson(System.Object,System.Type,System.Boolean)">
            <summary>
                将对象序列化成json字符串
            </summary>
            <param name="instance">用于序列化的对象实例</param>
            <param name="type">对象形式类型</param>
            <param name="propertycamelCase">属性使用驼峰命名</param>
            <returns>对象序列化后的json字符串</returns>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogCritical(System.String,System.Object[])">
            <summary>
                记录致命错误
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogCritical(System.Exception,System.String,System.Object[])">
            <summary>
                记录致命错误
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogDebug(System.Exception,System.String,System.Object[])">
            <summary>
                记录调试信息
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogDebug(System.String,System.Object[])">
            <summary>
                记录调试信息
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogError(System.String,System.Object[])">
            <summary>
                记录错误
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogError(System.Exception,System.Object[])">
            <summary>
                记录错误
            </summary>
            <param name="exception"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogInformation(System.Exception,System.String,System.Object[])">
            <summary>
                记录信息
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogInformation(System.String,System.Object[])">
            <summary>
                记录信息
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogTrace(System.String,System.Boolean,System.Object[])">
            <summary>
                记录跟踪信息
            </summary>
            <param name="message"></param>
            <param name="showMessage"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogTrace(System.Exception,System.String,System.Object[])">
            <summary>
                记录跟踪信息
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogWarning(System.String,System.Object[])">
            <summary>
                记录警告
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogWarning(System.Exception,System.String,System.Object[])">
            <summary>
                记录警告
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogDebug(System.String)">
            <summary>
                记录调试信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CoreApi.Common.Implement.NLogServiceBase.LogInformation(System.String)">
            <summary>
                记录信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:CoreApi.Common.Tools.Encryption.RSAHelper">
            <summary>
            非对称加密
            </summary>
        </member>
        <member name="M:CoreApi.Common.Tools.Encryption.RSAHelper.#ctor(CoreApi.Common.Tools.Encryption.RSAType,System.Text.Encoding)">
            <summary>
            实例化RSAHelper
            </summary>
            <param name="rsaType">加密算法类型 RSA SHA1;RSA2 SHA256 密钥长度至少为2048</param>
            <param name="encoding">编码类型</param>
        </member>
        <member name="M:CoreApi.Common.Tools.Encryption.RSAHelper.Sign(System.String)">
            <summary>
            使用私钥签名
            </summary>
            <param name="data">原始数据</param>
            <returns></returns>
        </member>
        <member name="M:CoreApi.Common.Tools.Encryption.RSAHelper.Verify(System.String,System.String)">
            <summary>
            使用公钥验证签名
            </summary>
            <param name="data">原始数据</param>
            <param name="sign">签名</param>
            <returns></returns>
        </member>
        <member name="M:CoreApi.Common.Tools.Encryption.RSAHelper.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="M:CoreApi.Common.Tools.Encryption.RSAHelper.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:CoreApi.Common.Tools.Encryption.RSAHelper.CreateRsaProviderFromPrivateKey(System.String)">
            <summary>
            使用私钥创建RSA实例
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:CoreApi.Common.Tools.Encryption.RSAHelper.CreateRsaProviderFromPublicKey(System.String)">
            <summary>
            使用公钥创建RSA实例
            </summary>
            <param name="publicKeyString"></param>
            <returns></returns>
        </member>
        <member name="M:CoreApi.Common.Tools.Encryption.RSAHelper.GetIntegerSize(System.IO.BinaryReader)">
            <summary>
            导入密钥算法
            </summary>
            <param name="binr"></param>
            <returns></returns>
        </member>
        <member name="T:CoreApi.Common.Tools.Encryption.RSAType">
            <summary>
            RSA算法类型
            </summary>
        </member>
        <member name="F:CoreApi.Common.Tools.Encryption.RSAType.RSA">
            <summary>
            SHA1
            </summary>
        </member>
        <member name="F:CoreApi.Common.Tools.Encryption.RSAType.RSA2">
            <summary>
            RSA2 密钥长度至少为2048
            SHA256
            </summary>
        </member>
        <member name="T:CoreApi.Common.Tools.Https.DataCertificate">
            <summary>
            数字证书
            </summary>
        </member>
        <member name="M:CoreApi.Common.Tools.Https.DataCertificate.CreateCertWithPrivateKey(System.String,System.String)">
            <summary>   
            根据指定的证书名和makecert全路径生成证书（包含公钥和私钥，并保存在MY存储区）   
            </summary>   
            <param name="subjectName">证书名称</param>   
            <param name="makecertPath"></param>   
            <returns></returns>   
        </member>
        <member name="M:CoreApi.Common.Tools.Https.DataCertificate.ExportToPfxFile(System.String,System.String,System.String,System.Boolean)">
            <summary>   
            从WINDOWS证书存储区的个人MY区找到主题为subjectName的证书，   
            并导出为pfx文件，同时为其指定一个密码   
            并将证书从个人区删除(如果isDelFromstor为true)   
            </summary>   
            <param name="subjectName">证书主题，不包含CN=</param>   
            <param name="pfxFileName">pfx文件名</param>   
            <param name="password">pfx文件密码</param>   
            <param name="isDelFromStore">是否从存储区删除</param>   
            <returns></returns>   
        </member>
        <member name="M:CoreApi.Common.Tools.Https.DataCertificate.ExportToCerFile(System.String,System.String)">
            <summary>   
            从WINDOWS证书存储区的个人MY区找到主题为subjectName的证书，   
            并导出为CER文件（即，只含公钥的）   
            </summary>   
            <param name="subjectName"></param>   
            <param name="cerFileName"></param>   
            <returns></returns>   
        </member>
        <member name="M:CoreApi.Common.Tools.Https.DataCertificate.GetCertificateFromPfxFile(System.String,System.String)">
            <summary>   
            根据私钥证书得到证书实体，得到实体后可以根据其公钥和私钥进行加解密   
            加解密函数使用DEncrypt的RSACryption类   
            </summary>   
            <param name="pfxFileName"></param>   
            <param name="password"></param>   
            <returns></returns>   
        </member>
        <member name="M:CoreApi.Common.Tools.Https.DataCertificate.GetCertificateFromStore(System.String)">
            <summary>   
            到存储区获取证书   
            </summary>   
            <param name="subjectName"></param>   
            <returns></returns>   
        </member>
        <member name="M:CoreApi.Common.Tools.Https.DataCertificate.GetCertFromCerFile(System.String)">
            <summary>   
            根据公钥证书，返回证书实体   
            </summary>   
            <param name="cerPath"></param>   
        </member>
        <member name="M:CoreApi.Common.Tools.Https.DataCertificate.RSADecrypt(System.String,System.String)">
            <summary>   
            RSA解密   
            </summary>   
            <param name="xmlPrivateKey"></param>   
            <param name="m_strDecryptString"></param>   
            <returns></returns>   
        </member>
        <member name="M:CoreApi.Common.Tools.Https.DataCertificate.RSAEncrypt(System.String,System.String)">
            <summary>   
            RSA加密   
            </summary>   
            <param name="xmlPublicKey"></param>   
            <param name="m_strEncryptString"></param>   
            <returns></returns>   
        </member>
        <member name="T:CoreApi.Common.Tools.TokenModelJwt">
            <summary>
            令牌
            </summary>
        </member>
        <member name="P:CoreApi.Common.Tools.TokenModelJwt.Uid">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CoreApi.Common.Tools.TokenModelJwt.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:CoreApi.Common.Tools.TokenModelJwt.Work">
            <summary>
            职能
            </summary>
        </member>
        <member name="T:CoreApi.Common.Tools.OperateResult`1">
            <summary>
                泛型的结果信息
            </summary>
        </member>
        <member name="M:CoreApi.Common.Tools.OperateResult`1.#ctor(System.Boolean,System.String,`0)">
            <summary>
                构造函数
            </summary>
            <param name="r">返回结果</param>
            <param name="message">结果信息</param>
            <param name="returnValue">返回数据对象</param>
        </member>
        <member name="M:CoreApi.Common.Tools.OperateResult`1.#ctor(`0)">
            <summary>
                构造函数
            </summary>
            <param name="returnValue">返回数据对象</param>
        </member>
        <member name="M:CoreApi.Common.Tools.OperateResult`1.#ctor(System.Boolean,System.String)">
            <summary>
                构造函数
            </summary>
            <param name="r">默认结果</param>
            <param name="m">信息</param>
        </member>
        <member name="M:CoreApi.Common.Tools.OperateResult`1.#ctor">
            <summary>
                无参构造函数
            </summary>
        </member>
        <member name="M:CoreApi.Common.Tools.OperateResult`1.#ctor(System.Boolean)">
            <summary>
                构造函数
            </summary>
            <param name="r">if set to <c>true</c> [r].</param>
        </member>
        <member name="M:CoreApi.Common.Tools.OperateResult`1.#ctor(System.Collections.Generic.IEnumerable{CoreApi.Common.Tools.OperateResult})">
            <summary>
                构造函数
            </summary>
        </member>
        <member name="M:CoreApi.Common.Tools.OperateResult`1.#ctor(System.Exception)">
            <summary>
                构造函数
            </summary>
            <param name="e">异常</param>
        </member>
        <member name="P:CoreApi.Common.Tools.OperateResult`1.ReturnValue">
            <summary>
                带回的数据
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:CoreApi.Common.Tools.OperateResult`1.ValueTypeName">
            <summary>
                数据类型名称
            </summary>
            <value>The name of the value type.</value>
        </member>
        <member name="T:CoreApi.Common.Tools.OperateResult">
            <summary>
                泛型的结果信息
            </summary>
        </member>
        <member name="M:CoreApi.Common.Tools.OperateResult.#ctor(System.Boolean,System.String)">
            <summary>
                构造函数
            </summary>
            <param name="r">返回结果</param>
            <param name="message">结果信息</param>
        </member>
        <member name="M:CoreApi.Common.Tools.OperateResult.#ctor(System.Exception)">
            <summary>
                构造函数
            </summary>
            <param name="e">异常</param>
        </member>
        <member name="M:CoreApi.Common.Tools.OperateResult.#ctor(System.Boolean)">
            <summary>
                构造函数
            </summary>
            <param name="r">if set to <c>true</c> [r].</param>
        </member>
        <member name="M:CoreApi.Common.Tools.OperateResult.#ctor">
            <summary>
                无参构造函数
            </summary>
        </member>
        <member name="P:CoreApi.Common.Tools.OperateResult.Result">
            <summary>
                Bool型结果
            </summary>
        </member>
        <member name="P:CoreApi.Common.Tools.OperateResult.ErrorMessage">
            <summary>
                错误或异常信息
            </summary>
        </member>
        <member name="P:CoreApi.Common.Tools.OperateResult.Description">
            <summary>
                描述
            </summary>
        </member>
    </members>
</doc>
